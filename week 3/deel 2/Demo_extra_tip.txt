# for reading all the files

from TrainingSetUtil import *

SPAM = 'spam'
HAM = 'ham'

# Te onderzoeken dirs met e-mails
spam1_path = 'data/test/spam_1/'
easy_ham1_path = 'data/test/easy_ham_1/'
hard_ham1_path = 'data/test/hard_ham_1/'
hard_ham2_path = 'data/test/hard_ham_2/'


def classify(message, training_set, prior=0.5, c=3.7e-4):
    # splits message op in woorden
    msg_terms = get_words(message)

    # start probaibilty = 1
    msg_probability = 1

    # vul aan
    # overloop alle woorden

    # is woord in de trainingset?
    # woord komt niet voor in trainingset --> heel weinig laten meetellen

    return msg_probability * prior









# onderzoek van e-mails in spam1_path
# alle bestanden oplijsten in deze dir
mails_in_dir = [mail_file for mail_file in listdir(spam1_path) if isfile(join(spam1_path, mail_file))]

# aantal bijhouden waar een e-mail als spam of ham onderverdeeld wordt
# maak 2 variabelen aan

# e-mails overlopen
for mail_name in mails_in_dir:
    print(mail_name)

    mail_msg = get_mail_from_file(spam1_path + mail_name)

    # spam_probability = classify(mail_msg, spam_training_set, 0.33)
    # ham_probability = classify(mail_msg, ham_training_set, 0.67)
    #
    # #vergelijk beide en pas juiste variabele aan

# print aantallen uit
# bereken procentuele verhouding tss spam en not spam
